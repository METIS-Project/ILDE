<?xml version="1.0"?>
<!--
All XUL fields work by AJAX magic.
All the property page xul templates are handled by AJAX code in xului/propertiespage.py

This code has 3 purposes:
1. Translates labels and descriptions as they are shown
2. Fills in form fields from attributes of engine properties
3. Receives the data when the user submits

===============================
Quick HowTo add a normal string field:
===============================
1. Make a normal label and a textbox like this:
<label id="ppmyattrib" value="My Label"/>
<textbox id="pp_myAttrib" onchange="this.style.color='blue';" />

Rules:
1. Label must have a unique id. It must be unique overall the properties pages
   as they are all imported into the same XUL document. This is so the system
   can translate the label.
2. Any field with 1 underscore in the name will be considered a data field.
3. The bit before the underscore is a 2 character id for the engine object:

    # pp means Project Properties (package)
    # dc means Dublin Core (package.dublinCore)
    # eo means Export Options (package.exportOptions)

4. The bit after the underscore is the name of the attribute

eg. pp_title => package.title

5. ATM only string and boolean attributes are supported
6. The 'onchange' handler is just a visual indicator to the user that his change
   is yet to be sent to the server. After the server recieves the changes it
   changes the color back to black automatically.

===============================
Form Howto:
===============================

Fields are automatically loaded with data from the server when shown.
There is a java script function called 'submitForm' which will submit all the
fields inside a given element to the server.

Usually its called with "this.parentNode.parentNode" as the parameter because 'this' is
the submit button, and parentNode.parentNode is the container of all the form elements
that we want to submit.

You could call this function in the onchange handler of a single element passing
this.parentNode to do auto updates of just this field (and any siblings) if you want.
-->

<metadata
  xmlns="http://www.exelearning.org/metadata/dc/"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.exelearning.org/metadata/dc/ http://www.exelearning.org/metadata/dc/schema.xsd"
  xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:dcterms="http://purl.org/cd/terms/">

<dc:title>%(title)s</dc:title>
<dc:creator>%(creator)s</dc:creator>
<dc:subject>%(subject)s</dc:subject>
<dc:description>%(description)s</dc:description>
<dc:publisher>%(publisher)s</dc:publisher>
<dc:contributor>%(contributors)s</dc:contributor>
<dc:date>%(date)s</dc:date>
<dc:type>%(type)s</dc:type>
<dc:format>%(format)s</dc:format>
<dc:identifier>%(identifier)s</dc:identifier>
<dc:source>%(source)s</dc:source>
<dc:language>%(language)s</dc:language>
<dc:relation>%(relation)s</dc:relation>
<dc:coverage>%(coverage)s</dc:coverage>
<dc:rights>%(rights)s</dc:rights>

</metadata>
